/*! ErrorTracking 2015-02-15  0.0.3 */
(function(){"use strict";function a(a){a="undefined"==typeof a?{}:a,this.debug="undefined"!=typeof a.debug?a.debug:!1,this.throwErrors="undefined"!=typeof a.throwErrors?a.throwErrors:!0,this.errorStack=[],this.functionsToTrack=["addEventListener","alert","atob","back","blur","btoa","captureEvents","clearInterval","clearTimeout","close","confirm","createBlobURL","dispatchEvent","enableExternalCapture","escape","find","focus","forward","getSelection","moveBy","moveTo","mozRequestAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","open","postMessage","prompt","releaseEvents","removeEventListener","resizeBy","resizeTo","revokeBlobURL","routeEvent","scroll","scrollBy","scrollByLines","scrollByPages","scrollTo","setInterval","setTimeout","sizeToContent","stop","unescape"],this.wrapFunctions(),this.pushToAnalytic="undefined"!=typeof a.pushToAnalytics?a.pushToAnalytics:!1}a.prototype.createError=function(a,b){return{message:a,stack:b}},a.prototype.handleError=function(a){this.errorStack.push(a),this.debug&&this.printError(a),this.pushToAnalytics&&"undefined"!=typeof _gaq&&_gaq.push(["_trackEvent","JavaScript Error",a.message,a.stack,!0])},a.prototype.wrapFunctions=function(){var a=this;for(var b in a.functionsToTrack)a.wrapFunction(a.functionsToTrack[b])},a.prototype.wrapFunction=function(a){if("undefined"!=typeof window.EventTarget&&"undefined"!==window.EventTarget.prototype[a]){var b=this,c=window.EventTarget.prototype[a];window.EventTarget.prototype[a]=function(a,d,e){c.call(this,a,b.errorCatcher(d),e)}}},a.prototype.errorCatcher=function(a){var b=this;return a._wrapped||(a._wrapped=function(){try{a.apply(this,arguments)}catch(c){if(b.handleError(b.createError(c.message,c.stack)),b.throwErrors)throw c}}),a._wrapped},a.prototype.attacheErrorEvent=function(){var a=this;window.onerror=function(b,c,d,e,f){a.handleError(a.createError(b,f.stack))},window.addEventListener("error",function(b){a.handleError(a.createError(b.error.message,b.error.stack))})},a.prototype.printErrors=function(){for(var a in this.errorStack)this.printError(this.errorStack[a])},a.prototype.printError=function(a){"undefined"!=typeof console.groupCollapsed?console.groupCollapsed(a.message):console.group(a.message),console.error(a.stack),console.groupEnd(a.message)},a.prototype.clearErrorStack=function(){this.errorStack=[]},window.ErrorTracking=a}).call();